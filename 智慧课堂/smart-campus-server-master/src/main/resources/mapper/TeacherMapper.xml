<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.core.mapper.TeacherMapper">

    <resultMap type="com.core.entity.Teacher" id="TeacherResult">
        <result property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="courseIds" column="course_ids"/>
        <result property="num" column="num"/>
        <result property="name" column="name"/>
        <result property="age" column="age"/>
        <result property="position" column="position"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <sql id="selectTeacherVo">
        select id, user_id, num, name, age, position, course_ids, create_time  from teacher
    </sql>

    <select id="selectTeacherList" parameterType="com.core.entity.Teacher" resultMap="TeacherResult">
        <include refid="selectTeacherVo"/>
        <where>
            <if test="userId != null ">
                and user_id = #{userId}
            </if>
            <if test="num != null ">
                and num = #{num}
            </if>
            <if test="name != null  and name != ''">
                and name like concat('%', #{name}, '%')
            </if>
            <if test="age != null ">
                and age = #{age}
            </if>
            <if test="position != null  and position != ''">
                and position = #{position}
            </if>
            <if test="courseIds != null  and position != ''">
                and course_ids = #{courseIds}
            </if>
            <if test="createTime != null ">
                and create_time = #{createTime}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <select id="selectTeacherById" parameterType="Long" resultMap="TeacherResult">
        <include refid="selectTeacherVo"/>
        where id = #{id}
    </select>

    <insert id="insertTeacher" parameterType="com.core.entity.Teacher" useGeneratedKeys="true" keyProperty="id">
        insert into teacher
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="num != null">
                num,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="position != null">
                position,
            </if>
            <if test="courseIds != null">
                course_ids,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId},
            </if>
            <if test="num != null">
                #{num},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="age != null">
                #{age},
            </if>
            <if test="position != null">
                #{position},
            </if>
            <if test="courseIds != null">
                #{courseIds},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
        </trim>
    </insert>

    <update id="updateTeacher" parameterType="com.core.entity.Teacher">
        update teacher
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="num != null">
                num = #{num},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="position != null">
                position = #{position},
            </if>
            <if test="courseIds != null">
                course_ids = #{courseIds},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTeacherById" parameterType="Long">
        delete from teacher where id = #{id}
    </delete>

    <delete id="deleteTeacherByIds" parameterType="String">
        delete from teacher where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
